name: validations

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]
  workflow_dispatch:
    inputs:
      run_quality_check:
        description: 'Run PHP Mess Detector quality check'
        required: false
        default: false
        type: boolean

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

permissions:
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Setup PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: '8.4'

    - name: Get Composer cache directory
      id: composer-cache-dir
      run: echo "dir=$(composer config cache-files-dir)" >> $GITHUB_OUTPUT

    - name: Cache Composer dependencies
      uses: actions/cache@v4
      with:
        path: ${{ steps.composer-cache-dir.outputs.dir }}
        key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
        restore-keys: |
          ${{ runner.os }}-composer-

    - name: Validate PHP syntax
      run: find . -name "*.php" -not -path "./vendor/*" -print0 | xargs -0 -n1 php -l

    - name: Validate composer.json and composer.lock
      run: composer validate --strict --check-lock --with-dependencies

    - name: Install dependencies
      run: composer install --prefer-dist --no-progress

    - name: Security audit
      run: composer audit

    - name: Check code style
      run: composer check:all

    - name: Run PHPStan analysis
      run: composer analyse:phpstan

    - name: Run Psalm analysis
      run: composer analyse:psalm

    - name: Run PHP Mess Detector
      if: github.event_name == 'workflow_dispatch' && inputs.run_quality_check == true
      run: composer quality:all

    - name: Run test suite
      run: composer tests

    - name: Build Summary
      if: always()
      run: |
        echo "### PHP Build Summary ðŸš€" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "**PHP Version:** 8.4" >> $GITHUB_STEP_SUMMARY
        echo "**Platform:** ${{ runner.os }}" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "**Quality Checks:**" >> $GITHUB_STEP_SUMMARY
        echo "- âœ… Code style (PHP_CodeSniffer)" >> $GITHUB_STEP_SUMMARY
        echo "- âœ… Static analysis (PHPStan level 3)" >> $GITHUB_STEP_SUMMARY
        echo "- âœ… Static analysis (Psalm level 4)" >> $GITHUB_STEP_SUMMARY
        echo "- âœ… Security audit (Composer)" >> $GITHUB_STEP_SUMMARY
        echo "- âœ… Unit tests (PHPUnit)" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "**Workflow:** ${{ github.workflow }} (#${{ github.run_number }})" >> $GITHUB_STEP_SUMMARY

  compatibility:
    name: PHP ${{ matrix.php-version }} Compatibility
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        php-version: ['8.1', '8.2', '8.3', '8.4']

    steps:
    - uses: actions/checkout@v4

    - name: Setup PHP ${{ matrix.php-version }}
      uses: shivammathur/setup-php@v2
      with:
        php-version: ${{ matrix.php-version }}
        coverage: none

    - name: Get Composer cache directory
      id: composer-cache-dir
      run: echo "dir=$(composer config cache-files-dir)" >> $GITHUB_OUTPUT

    - name: Cache Composer dependencies
      uses: actions/cache@v4
      with:
        path: ${{ steps.composer-cache-dir.outputs.dir }}
        key: ${{ runner.os }}-php-${{ matrix.php-version }}-composer-${{ hashFiles('**/composer.lock') }}
        restore-keys: |
          ${{ runner.os }}-php-${{ matrix.php-version }}-composer-

    - name: Install dependencies
      run: composer install --prefer-dist --no-progress

    - name: Check PHP ${{ matrix.php-version }} compatibility
      run: composer compat:${{ matrix.php-version }}

    - name: Compatibility Summary
      if: always()
      run: |
        echo "### PHP ${{ matrix.php-version }} Compatibility Check âœ“" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "**Target PHP Version:** ${{ matrix.php-version }}" >> $GITHUB_STEP_SUMMARY
        echo "**Analysis Tool:** Phan (polyfill parser)" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "Compatibility check completed for PHP ${{ matrix.php-version }}" >> $GITHUB_STEP_SUMMARY

